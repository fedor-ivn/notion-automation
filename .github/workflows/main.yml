# This is a basic workflow to help you get started with Actions

name: recurring tasks

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  schedule:
    - cron:  '*/7 * * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Running recurring tasks process
      env:
        TOKEN_V2: ${{ secrets.TOKEN_V2 }}
        NOTION_API_TOKEN: ${{ secrets.NOTION_API_TOKEN }}
        TASK_TEMPLATE_DATABASE_ID: ${{ secrets.TASK_TEMPLATE_DATABASE_ID }}
        TASK_REPEATER_DATABASE_ID: ${{ secrets.TASK_REPEATER_DATABASE_ID }}
        TASK_DATABASE_ID: ${{ secrets.TASK_DATABASE_ID }}
      run: |
        python repeater.py
